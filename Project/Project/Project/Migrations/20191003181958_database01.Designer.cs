// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Models;

namespace Project.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20191003181958_database01")]
    partial class database01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Project.Models.Comment", b =>
                {
                    b.Property<int>("commentid")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comment");

                    b.Property<DateTime>("date");

                    b.Property<int>("userid");

                    b.Property<string>("username");

                    b.HasKey("commentid");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Project.Models.Favorite", b =>
                {
                    b.Property<int>("userid");

                    b.Property<int>("stationid");

                    b.HasKey("userid", "stationid");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("Project.Models.Prohram", b =>
                {
                    b.Property<int>("ProgramId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Hour_begin");

                    b.Property<string>("Hour_end");

                    b.Property<string>("Name_program")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Period");

                    b.Property<int>("radioid");

                    b.HasKey("ProgramId");

                    b.ToTable("Prohrams");
                });

            modelBuilder.Entity("Project.Models.Radio", b =>
                {
                    b.Property<int>("RadioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Frequency");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("Rating");

                    b.HasKey("RadioId");

                    b.ToTable("Radio_Stations");
                });

            modelBuilder.Entity("Project.Models.Rating", b =>
                {
                    b.Property<int>("userid");

                    b.Property<int>("stationid");

                    b.Property<int>("RatingId");

                    b.Property<int>("rating");

                    b.HasKey("userid", "stationid");

                    b.HasAlternateKey("RatingId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Project.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<int>("Index");

                    b.Property<float>("Kredyt");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
